{"version":3,"sources":["App.js","component/TableCell.jsx","component/TableRow.jsx","component/Table.jsx","component/Button.jsx","component/Toolbar.jsx","index.js"],"names":["table","TableCell","props","this","color","style","backgroundColor","className","colNum","data","Component","TableRow","cols","i","colgrid","push","rowNum","Table","rows","grid","id","Button","onClick","func","name","Toolbar","key","toolbar","map","button","React","limit","updateGrid","events","mouseDown","mouseLeft","App","addRow","state","setState","addCol","delRow","delCol","fillAll","j","fillUncolored","clearAll","setTimeout","changeColor","hex","updateColor","e","target","tagName","Number","parentNode","handleColoring","bind","document","querySelector","onmousedown","onmouseup","addEventListener","onChange","onMouseOver","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0969cac9.chunk.js","sourcesContent":["// React\r\nimport React, { Component } from 'react';\r\nimport Table from './component/Table';\r\nimport Toolbar from './component/Toolbar';\r\nimport { SketchPicker } from 'react-color';\r\n\r\n// CSS\r\nimport './styles/app.css';\r\n\r\n// user is never allowed to add more than \"limit\"\r\n// number of rows or cols\r\nvar limit = 25;\r\n\r\n// This 2D array is used to save user's colors before\r\n// it is saved to this.state.grid\r\nvar updateGrid = [[]];\r\n\r\n// Mouse Events on Table\r\nvar table;\r\nvar events = {\r\n  mouseDown: false,\r\n  mouseLeft: true,\r\n};\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 10,\r\n      cols: 10,\r\n      grid: [[]],\r\n      color: '#ff577f', // default color\r\n    };\r\n\r\n    this.addRow = this.addRow.bind(this);\r\n    this.addCol = this.addCol.bind(this);\r\n    this.delRow = this.delRow.bind(this);\r\n    this.delCol = this.delCol.bind(this);\r\n    this.fillAll = this.fillAll.bind(this);\r\n    this.fillUncolored = this.fillUncolored.bind(this);\r\n    this.clearAll = this.clearAll.bind(this);\r\n    this.updateColor = this.updateColor.bind(this);\r\n    this.updateGrid = this.updateGrid.bind(this);\r\n    this.handleColoring = this.handleColoring.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    for (var i = 0; i < limit; i++) {\r\n      updateGrid[i] = []; // <===== initialize the row\r\n      for (var j = 0; j < limit; j++) {\r\n        updateGrid[i][j] = '';\r\n      }\r\n    }\r\n\r\n    this.updateGrid();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // colorHeader(document.querySelector('h1'));\r\n    table = document.querySelector('.table');\r\n\r\n    table.onmousedown = function () {\r\n      events.mouseDown = true;\r\n    };\r\n    table.onmouseup = function () {\r\n      events.mouseDown = false;\r\n    };\r\n\r\n    table.addEventListener('click', (e) => this.updateColor(e));\r\n    table.addEventListener('mouseleave', (e) => (events.mouseLeft = true));\r\n    table.addEventListener('mousedown', (e) => {\r\n      events.mouseLeft = false;\r\n      this.updateColor(e);\r\n    });\r\n  }\r\n\r\n  /* #region : class methods */\r\n\r\n  addRow = (n = 1) => {\r\n    this.updateGrid();\r\n    if (this.state.rows < limit) this.setState({ rows: ++this.state.rows });\r\n  };\r\n\r\n  addCol = (n = 1) => {\r\n    this.updateGrid();\r\n    if (this.state.cols < limit) this.setState({ cols: ++this.state.cols });\r\n  };\r\n\r\n  delRow = (n = 1) => {\r\n    this.updateGrid();\r\n    this.state.rows > 1 && this.setState({ rows: --this.state.rows });\r\n  };\r\n\r\n  delCol = (n = 1) => {\r\n    this.updateGrid();\r\n    this.state.cols > 1 && this.setState({ cols: --this.state.cols });\r\n  };\r\n\r\n  fillAll = () => {\r\n    for (var i = 0; i < limit; i++) {\r\n      for (var j = 0; j < limit; j++) {\r\n        updateGrid[i][j] = this.state.color;\r\n      }\r\n    }\r\n    this.updateGrid();\r\n  };\r\n\r\n  fillUncolored = () => {\r\n    for (var i = 0; i < limit; i++) {\r\n      for (var j = 0; j < limit; j++) {\r\n        if (updateGrid[i][j] == '') updateGrid[i][j] = this.state.color;\r\n      }\r\n    }\r\n    this.updateGrid();\r\n  };\r\n\r\n  clearAll = () => {\r\n    // this method fills the whole grid witha color and\r\n    // then clears it after 300ms, otherwise for some reason\r\n    // react does not re-render.\r\n    this.fillAll();\r\n    setTimeout(() => {\r\n      for (var i = 0; i < limit; i++) {\r\n        for (var j = 0; j < limit; j++) {\r\n          updateGrid[i][j] = '';\r\n        }\r\n      }\r\n      this.updateGrid();\r\n    }, 300);\r\n  };\r\n\r\n  changeColor = (color) => {\r\n    this.setState({ color: color.hex });\r\n  };\r\n\r\n  updateGrid = () => {\r\n    this.setState({ grid: updateGrid });\r\n  };\r\n\r\n  updateColor = (e) => {\r\n    // colors a TD and saves changes to updateGrid\r\n    // without changing this.state.grid\r\n    if (e.target.tagName == 'TD') {\r\n      const td = e.target;\r\n      const color = this.state.color;\r\n\r\n      let colNum = Number(e.target.className);\r\n      let rowNum = Number(e.target.parentNode.className);\r\n\r\n      // save changes to updateGrid and color the table\r\n      updateGrid[rowNum][colNum] = color;\r\n      e.target.style.backgroundColor = color;\r\n    }\r\n  };\r\n\r\n  handleColoring = (e) => {\r\n    if (events.mouseDown && !events.mouseLeft) {\r\n      this.updateColor(e);\r\n    }\r\n  };\r\n\r\n  /* #endregion : class methods */\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='header-container'>\r\n          <h1>\r\n            <span className='red'>React.js</span> Color Grid\r\n          </h1>\r\n          {\r\n            <Toolbar\r\n              toolbar={[\r\n                { name: 'Add Row', func: this.addRow },\r\n                { name: 'Add Column', func: this.addCol },\r\n                { name: 'Del Row', func: this.delRow },\r\n                { name: 'Del Column', func: this.delCol },\r\n                { name: 'Fill All', func: this.fillAll },\r\n                { name: 'Fill Uncolored', func: this.fillUncolored },\r\n                { name: 'Clear All', func: this.clearAll },\r\n              ]}\r\n            />\r\n          }\r\n        </div>\r\n        <h5>\r\n          Rows: {this.state.rows}, Cols: {this.state.cols}\r\n        </h5>\r\n        <div className='separated-columns'>\r\n          <div className='sketcher-picker'>\r\n            {/* A third party color picker library */}\r\n            <SketchPicker\r\n              color={this.state.color}\r\n              onChange={this.changeColor}\r\n            />\r\n          </div>\r\n          <div className='table' onMouseOver={this.handleColoring}>\r\n            <Table\r\n              key={this.state.rows * this.state.cols}\r\n              rows={this.state.rows}\r\n              cols={this.state.cols}\r\n              grid={this.state.grid}\r\n              color={this.state.color}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass TableCell extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { color = '' } = this.props;\r\n\r\n    return (\r\n      <td style={{ backgroundColor: color }} className={this.props.colNum}>\r\n        {this.props.data}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableCell;\r\n","import React, { Component } from 'react';\r\nimport TableCell from './TableCell';\r\n\r\nvar colNum = 0;\r\n\r\nclass TableRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let cols = [];\r\n    for (let i = 1; i <= this.props.cols; i++) {\r\n      let color = this.props.colgrid[i - 1];\r\n      cols.push(\r\n        <TableCell color={color} colNum={colNum++} key={i} data='&nbsp;' />\r\n      );\r\n    }\r\n    colNum = 0;\r\n    return <tr className={this.props.rowNum}>{cols}</tr>;\r\n  }\r\n}\r\n\r\nexport default TableRow;\r\n","// React\r\nimport React, { Component } from 'react';\r\nimport TableRow from './TableRow';\r\n\r\n// CSS\r\nimport '../styles/table.css';\r\n\r\nvar rowNum = 0;\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let rows = [];\r\n    for (let i = 1; i <= this.props.rows; i++) {\r\n      let colgrid = this.props.grid[i - 1];\r\n      let color = rows.push(\r\n        <TableRow\r\n          colgrid={colgrid}\r\n          rowNum={rowNum++}\r\n          key={i}\r\n          cols={this.props.cols}\r\n          color={this.props.color}\r\n        />\r\n      );\r\n    }\r\n\r\n    rowNum = 0;\r\n\r\n    return (\r\n      <div id='content'>\r\n        <table>\r\n          <tbody>{rows}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <button onClick={this.props.func}>{this.props.name}</button>;\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Button from './Button';\r\n\r\nclass Toolbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  key = 7799966; // random key\r\n\r\n  render() {\r\n    return (\r\n      <div className='toolbar'>\r\n        {this.props.toolbar.map((button) => (\r\n          <Button\r\n            key={++this.key}\r\n            name={button['name']}\r\n            func={button['func']}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}